/*
    exp.json - Configuration for exp-gzip

    Compress final content
 */
{
    control: {
        transforms: {
            name:   'compress',
            from:   '*',
            to:     '*',
            include: null,  /* Array of glob */
            exclude: null,  /* Array of glob */
            script: `
                function transform(contents, meta, service) {
                    let file = meta.public
                    let dirs = meta.control.directories
                    if (service.include || service.exclude) {
                        touch(file)
                        if (service.include && !matchFile(file, dirs.public, service.include)) {
                            file.remove()
                            return contents
                        }
                        if (service.exclude && matchFile(file, dirs.public, service.exclude)) {
                            file.remove()
                            return contents
                        }
                        file.remove()
                        let gzip = Cmd.locate('gzip')
                        if (gzip) {
                            contents = run(gzip + ' -c', contents)
                            if (meta.public.extension != '.gz') {
                                meta.public = meta.public.joinExt('gz', true)
                            }
                        } else {
                            trace('Warn', 'Cannot find gzip')
                        }
                    }
                    return contents
                }
            `
        }
    }
}
